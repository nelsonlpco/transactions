// Code generated by MockGen. DO NOT EDIT.
// Source: ./infrastructure/datasource/operationtype.go

// Package mock_datasource is a generated GoMock package.
package mock_datasource

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	inframodel "github.com/nelsonlpco/transactions/infrastructure/inframodel"
)

// MockOperationTypeDatasource is a mock of OperationTypeDatasource interface.
type MockOperationTypeDatasource struct {
	ctrl     *gomock.Controller
	recorder *MockOperationTypeDatasourceMockRecorder
}

// MockOperationTypeDatasourceMockRecorder is the mock recorder for MockOperationTypeDatasource.
type MockOperationTypeDatasourceMockRecorder struct {
	mock *MockOperationTypeDatasource
}

// NewMockOperationTypeDatasource creates a new mock instance.
func NewMockOperationTypeDatasource(ctrl *gomock.Controller) *MockOperationTypeDatasource {
	mock := &MockOperationTypeDatasource{ctrl: ctrl}
	mock.recorder = &MockOperationTypeDatasourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationTypeDatasource) EXPECT() *MockOperationTypeDatasourceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockOperationTypeDatasource) Create(ctx context.Context, operationType *inframodel.OperationTypeModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, operationType)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockOperationTypeDatasourceMockRecorder) Create(ctx, operationType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockOperationTypeDatasource)(nil).Create), ctx, operationType)
}

// GetById mocks base method.
func (m *MockOperationTypeDatasource) GetById(ctx context.Context, id int) (*inframodel.OperationTypeModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", ctx, id)
	ret0, _ := ret[0].(*inframodel.OperationTypeModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockOperationTypeDatasourceMockRecorder) GetById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockOperationTypeDatasource)(nil).GetById), ctx, id)
}
